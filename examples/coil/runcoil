#!/bin/bash

set -euo pipefail

[ "${FAKE_COIL:-}" != "1" ] && FAKE_COIL=0
[ -z "${COIL_DIR:-}" ] && COIL_DIR="./controlled-leaking"

CMD="$1"
NAME="$2"
[ -n "$CMD" -a -n "$NAME" ] || exit 1

SRC_FILE="${NAME}.pita"
TGT_FILE="${NAME}.coil"
IN_FILE="${NAME}.input"
OUT_FILE="${NAME}.output"
BUILD_DIR=coil-build
PROG="$BUILD_DIR"/"$TGT_FILE"

[ "$FAKE_COIL" = 1 -o -f "$COIL_DIR" ] || exit 1

case "$CMD" in
    "compile")
        if [ "$FAKE_COIL" = 1 ]; then
            echo compiled
        else
            [ -f "$SRC_FILE" ] || exit 1

            SRC_PATH="$(pwd)"/"$SRC_FILE"
            (cd "$COIL_DIR"; python main.py "$SRC_PATH")
            mkdir -p "$BUILD_DIR"
            cmake -D TARGET="$TGT_FILE" -B "$BUILD_DIR" -S "$COIL_DIR/backends"
            cd "$BUILD_DIR"
            make -j$(nproc)
        fi
        ;;
    "run")
        if [ "$FAKE_COIL" = 1 ]; then
            echo exited
            echo 1 > "$OUT_FILE"
        else
            [ -f "$IN_FILE" ] || exit 1
            [ -x "$PROG" ] || exit 1

            "$PROG" "$IN_FILE" "$OUT_FILE"
        fi
        ;;
    *)
        exit 1
        ;;
esac
